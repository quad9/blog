{"pageProps":{"postData":{"id":"my-first-post","contentHtml":"<p>We recommend using <strong>Static Generation</strong> (with and without data) whenever possible because your page can be built once and served by CDN, which makes it much faster than having a server render the page on every request.</p>\n<p>静的生成を使うことで、あなたのページは一度構築され、CDNによって提供されるため、サーバーがリクエストのたびにページをレンダリングするよりもはるかに高速になります。</p>\n<p>You can use Static Generation for many types of pages, including:</p>\n<p>静的生成は、以下のような多くのタイプのページで使用することができます。</p>\n<ul>\n<li>Marketing pages</li>\n<li>Blog posts</li>\n<li>E-commerce product listings</li>\n<li>Help and documentation</li>\n</ul>\n<p>You should ask yourself: \"Can I pre-render this page <strong>ahead</strong> of a user's request?\" If the answer is yes, then you should choose Static Generation.</p>\n<p>\"このページをユーザーの<strong>リクエストに先立ってレンダリング</strong>するほうがいいだろうか\"と自問自答してみて、答えがイエスならば静的生成を選択すべきです。</p>\n<p>On the other hand, Static Generation is <strong>not</strong> a good idea if you cannot pre-render a page ahead of a user's request. Maybe your page shows frequently updated data, and the page content changes on every request.</p>\n<p>一方で、ユーザーのリクエストに先立ってページをプリレンダリングできない場合、スタティック生成は<strong>良いアイデアではありません</strong>。あなたのページは頻繁に更新されるデータを表示し、ページの内容はリクエストのたびに変化しているかもしれいからです。</p>\n<p>In that case, you can use <strong>Server-Side Rendering</strong>. It will be slower, but the pre-rendered page will always be up-to-date. Or you can skip pre-rendering and use client-side JavaScript to populate data.</p>\n<p>このようなケースでは、サーバーサイド・レンダリングを使うべきです。実行速度は遅くなりますが、プリレンダリングされたページは常に最新の状態で表示されます。あるいは、プリレンダリングをスキップして、クライアント側の JavaScript を使用してデータを入力することもできます。</p>\n","title":"My First Post","date":"2020-06-23"}},"__N_SSG":true}