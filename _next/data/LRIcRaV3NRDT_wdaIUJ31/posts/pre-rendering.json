{"pageProps":{"postData":{"id":"pre-rendering","contentHtml":"<p>Next.js has two forms of pre-rendering: <strong>Static Generation</strong> and <strong>Server-side Rendering</strong>. The difference is in <strong>when</strong> it generates the HTML for a page.</p>\n<p>Next.jsには2つの形式のプリレンダリングがあります。<strong>静的生成</strong>と<strong>サーバーサイドレンダリング</strong>です。違いは、ページのHTMLを生成する<strong>時</strong>にあります。</p>\n<ul>\n<li>\n<p><strong>Static Generation</strong> is the pre-rendering method that generates the HTML at <strong>build time</strong>. The pre-rendered HTML is then <em>reused</em> on each request.</p>\n</li>\n<li>\n<p><strong>Server-side Rendering</strong> is the pre-rendering method that generates the HTML on <strong>each request</strong>.</p>\n</li>\n<li>\n<p><strong>静的生成</strong>は、<strong>ビルド時</strong>にHTMLを生成するプリレンダリング・メソッドです。プリレンダリングされたHTMLは、各リクエストで<em>再利用</em>されます。</p>\n</li>\n<li>\n<p><strong>サーバーサイドレンダリング</strong>は、<strong>リクエストごとにHTMLを生成するプリレンダリング・メソッドです</strong>。</p>\n</li>\n</ul>\n<p>Importantly, Next.js lets you <strong>choose</strong> which pre-rendering form to use for each page. You can create a \"hybrid\" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.</p>\n<p>重要なことは、Next.jsではページごとにどのプリレンダリング・フォームを使用するかを<strong>選択する</strong>ことができるということです。ほとんどのページでスタティック生成を使用し、その他のページではサーバーサイドレンダリングを使用する「ハイブリッド」なNext.jsアプリを作成することができます。</p>\n","title":"Two Forms of Pre-rendering","date":"2020-06-20"}},"__N_SSG":true}